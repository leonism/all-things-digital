import{c as o,b as s,E as i}from"./main-i9f7EwPm.js";const n={class:"markdown-body"},g="My First Blog Post",p="My First Blog Post | Example Article",c="first-post",u="en",h="2025-05-26T15:55:32.815Z",m="2025-06-16T17:24:50.919Z",f={name:"Mike Smith",role:"Developer",image:"all-things-digital/avatar/avatar"},w="Technology",b=["vite","vue3","markdown","tailwindcss"],y={src:"all-things-digital/blog/thumbnail-03-comp",alt:"Code example screenshot",caption:"An example image for the first post."},v="This is the first example blog post generated for testing the Markdown processing and frontmatter structure. Welcome to the first blog post on this newly integrated Vue 3 blog! This post serves as an example to test the Markdown rendering and frontmatter extraction.",k="5 minutes",x="published",T=!1,M="low",P="index, follow",S="https://all-things-digital.pages.dev/blog/first-post",C={description:"This is the first example blog post generated for testing the Markdown processing and frontmatter structure. Welcome to the first blog post on this newly int",canonical:"https://all-things-digital.pages.dev/blog/first-post",keywords:["vite","vue3","markdown","tailwindcss","first","blog","post"]},B={comments:!0,shareButtons:!0,contentWarning:null},I="2025-07-07T01:10:11.373Z",F={__name:"first-post",setup(a,{expose:t}){return t({frontmatter:{title:"My First Blog Post",seoTitle:"My First Blog Post | Example Article",slug:"first-post",lang:"en",datePublished:"2025-05-26T15:55:32.815Z",dateModified:"2025-06-16T17:24:50.919Z",author:{name:"Mike Smith",role:"Developer",image:"all-things-digital/avatar/avatar"},category:"Technology",tags:["vite","vue3","markdown","tailwindcss"],featuredImage:{src:"all-things-digital/blog/thumbnail-03-comp",alt:"Code example screenshot",caption:"An example image for the first post."},excerpt:"This is the first example blog post generated for testing the Markdown processing and frontmatter structure. Welcome to the first blog post on this newly integrated Vue 3 blog! This post serves as an example to test the Markdown rendering and frontmatter extraction.",readingTime:"5 minutes",status:"published",featured:!1,priority:"low",metaRobots:"index, follow",canonicalUrl:"https://all-things-digital.pages.dev/blog/first-post",seo:{description:"This is the first example blog post generated for testing the Markdown processing and frontmatter structure. Welcome to the first blog post on this newly int",canonical:"https://all-things-digital.pages.dev/blog/first-post",keywords:["vite","vue3","markdown","tailwindcss","first","blog","post"]},contentSettings:{comments:!0,shareButtons:!0,contentWarning:null},lastModified:"2025-07-07T01:10:11.373Z"}}),(l,e)=>(s(),o("div",n,e[0]||(e[0]=[i(`<p>Welcome to the first blog post on this newly integrated Vue 3 blog! This post serves as an example to test the Markdown rendering and frontmatter extraction.</p><h2>Features</h2><p>We are using:</p><ul><li><strong>Vite:</strong> For fast development and builds.</li><li><strong>Vue 3:</strong> The progressive JavaScript framework.</li><li><strong>TailwindCSS:</strong> For utility-first styling.</li><li><strong>Markdown:</strong> For writing content.</li></ul><h3>Why Use These Tools?</h3><p>Each of these tools brings its own unique advantages:</p><ul><li><strong>Vite</strong> allows us to take advantage of modern JavaScript features like ES modules while offering near-instantaneous hot module replacement (HMR) for a faster development experience.</li><li><strong>Vue 3</strong> introduces the Composition API, which provides more flexibility when structuring complex components, making it easier to scale applications.</li><li><strong>TailwindCSS</strong> gives developers the ability to style directly within their HTML, avoiding long CSS files and promoting reusability through utility classes.</li><li><strong>Markdown</strong> makes writing content simpler and cleaner by focusing on readability without losing the ability to add rich formatting.</li></ul><h2>Code Example</h2><pre><code class="language-javascript">const featuredPost = useFeaturedPost();
const latestPosts = useLatestPosts();
const featuredImageSrc = computed(
  () =&gt;
    featuredPost.value?.featuredImage?.src ||
    &#39;/assets/img/featured-blog-comp.jpg&#39;,
);
const featuredImageAlt = computed(
  () =&gt; featuredPost.value?.featuredImage?.alt || featuredPost.value?.title,
);
const postCategory = computed(
  () =&gt;
    featuredPost.value?.category ||
    featuredPost.value?.categories?.[0] ||
    &#39;Uncategorized&#39;,
);
const categoryLink = computed(
  () =&gt; \`/blog/category/\${postCategory.value.toLowerCase()}\`,
);
const authorImageSrc = computed(
  () =&gt; featuredPost.value?.author?.image || avatar,
);
const authorImageAlt = computed(
  () =&gt; featuredPost.value?.author?.name || &#39;Author profile photo&#39;,
);
const authorLink = computed(() =&gt; featuredPost.value?.author?.link || &#39;/about&#39;);
&lt;/script&gt;
</code></pre><p>This demonstrates how code blocks are rendered. They can be used to include snippets of code in various programming languages, making it easy to share technical knowledge.</p><h3>Typography and Formatting</h3><p>Markdown lets you format your text easily. Here’s an overview of common typographic elements:</p><h4>Headings</h4><p>You can create headings of different levels like this:</p><h1>Heading 1</h1><h2>Heading 2</h2><h3>Heading 3</h3><h4>Bold and Italics</h4><p>Use double asterisks (<code>**</code>) for bold text and single asterisks (<code>*</code>) for italics. For example:</p><ul><li><strong>This is bold text.</strong></li><li><em>This is italicized text.</em></li></ul><h4>Blockquotes</h4><blockquote><p>Blockquotes are useful for quoting someone else’s words or emphasizing important points.</p></blockquote><h4>Lists</h4><p>Markdown supports both <strong>unordered</strong> and <strong>ordered</strong> lists:</p><ul><li>Unordered list item 1</li><li>Unordered list item 2 <ul><li>Nested unordered list item</li></ul></li></ul><ol><li>Ordered list item 1</li><li>Ordered list item 2 <ol><li>Nested ordered list item</li></ol></li></ol><h3>Links and Images</h3><p>You can easily insert links and images into your posts.</p><h4>Link Example:</h4><p>Check out <a href="https://www.pexels.com/">Pexels</a> for free stock photos.</p><h4>Image Example:</h4><p>Here’s an image sourced from Pexels:</p><p><img src="https://images.pexels.com/photos/19928140/pexels-photo-19928140.jpeg?auto=compress&amp;cs=tinysrgb&amp;w=1260&amp;h=750&amp;dpr=2" alt="Beautiful Landscape"><em>Caption: A serene landscape captured during sunrise.</em></p><h3>Conclusion</h3><p>In conclusion, this post showcases some of the capabilities of <strong>Markdown</strong>, demonstrating how it simplifies content creation while maintaining flexibility in formatting. By leveraging tools such as Vite, Vue 3, and TailwindCSS, we can build fast, scalable, and well-styled web applications with ease.</p><p>Feel free to experiment with this setup, and let us know what you think! Stay tuned for more updates as we continue refining our development process.</p><p>Happy coding!</p>`,37)])))}};export{f as author,S as canonicalUrl,w as category,B as contentSettings,m as dateModified,h as datePublished,F as default,v as excerpt,T as featured,y as featuredImage,u as lang,I as lastModified,P as metaRobots,M as priority,k as readingTime,C as seo,p as seoTitle,c as slug,x as status,b as tags,g as title};
